{"version":3,"sources":["components/Widget/CategoryOverviewBox.js","components/MainPage/Overview.js"],"names":["withRouter","withStyles","theme","_image","root","display","flexWrap","width","items","textDecoration","color","palette","primary","light","image","position","height","opacity","Object","defineProperty","breakpoints","down","zIndex","& $imageBackdrop","& $imageMarked","& $imageTitle","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","fontWeight","textTransform","fontSize","padding","concat","spacing","unit","imageMarked","props","classes","history","category","react_default","a","createElement","index_es","container","justify","className","map","i","key","item","sm","md","lg","onClick","redirectUrl","name","focusRipple","title","focusVisibleClassName","style","minHeight","margin","backgroundImage","img","Typography_default","component","variant","styles","lazy","__webpack_require__","e","then","bind","createUseStyles","section","productCategory","paddingTop","paddingBottom","text","textAlign","marginBottom","wordWrap","wordBreak","marginTop","connect","state","products","product","feeds","feed","dispatch","LoadingPage","filter","n","isImgOnlySections","sections","hasProductsToShow","length","tags","find","m","toLowerCase"],"mappings":"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","file":"static/js/5.9f4d67a6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport {ButtonBase, Grid} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport {withRouter} from \"react-router-dom\";\nimport {redirectUrl} from \"../../api/ApiUtils\";\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width: '100%',\n    },\n    items: {\n\n        textDecoration: 'none',\n        color: theme.palette.primary.light,\n\n    },\n    image: {\n        position: 'relative',\n        height: 200,\n        opacity: 0.85,\n\n        [theme.breakpoints.down('xs')]: {\n            width: '100% !important', // Overrides inline-style\n            height: 100,\n        },\n        '&:hover, &$focusVisible': {\n            zIndex: 1,\n            '& $imageBackdrop': {\n                opacity: 0.15,\n            },\n            '& $imageMarked': {\n                opacity: 0,\n            },\n            '& $imageTitle': {\n                border: '4px solid currentColor',\n            },\n        },\n    },\n    focusVisible: {},\n    imageButton: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.palette.common.white,\n    },\n    imageSrc: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center 40%',\n    },\n    imageBackdrop: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundColor: theme.palette.common.black,\n        opacity: 0.4,\n        transition: theme.transitions.create('opacity'),\n    },\n    imageTitle: {\n        fontWeight: 700,\n        textTransform: 'uppercase',\n        fontSize: '20PX',\n        position: 'relative',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 4}px ${theme.spacing.unit + 6}px`,\n    },\n    imageMarked: {\n        height: 3,\n        width: 18,\n        backgroundColor: theme.palette.common.white,\n        position: 'absolute',\n        bottom: -2,\n        left: 'calc(50% - 9px)',\n        transition: theme.transitions.create('opacity'),\n    },\n});\n\nconst ButtonBases = (props) => {\n    const {classes, history, category} = props;\n\n    return (\n\n        <Grid container alignItems={'center'} spacing={16} justify={'center'} className={classes.root}>\n            {category.map((image, i) => (\n                <Grid\n                    key={i}\n                    item sm={10} md={6} lg={4}\n                    container\n                    onClick={() => redirectUrl(`/products?tags=${image.name}`, history)}\n                    className={classes.items}\n\n                >\n                    <ButtonBase\n                        focusRipple\n                        key={image.title}\n                        className={classes.image}\n                        focusVisibleClassName={classes.focusVisible}\n                        style={{\n                            width: '100%',\n                            minHeight: '500px',\n                            margin: '5px',\n                        }}\n                    >\n                        <Grid\n\n                            className={classes.imageSrc}\n                            style={{\n                                backgroundImage: `url(${image.img})`,\n                            }}\n                        />\n                        <span className={classes.imageBackdrop}/>\n                        <span className={classes.imageButton}>\n            <Typography\n                component=\"span\"\n                variant=\"subtitle1\"\n                color=\"inherit\"\n                className={classes.imageTitle}\n            >\n              {image.name}\n                <span className={classes.imageMarked}/>\n            </Typography>\n          </span>\n                    </ButtonBase>\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nButtonBases.propTypes = {\n\n    classes: PropTypes.object.isRequired,\n\n\n};\n\nexport default withRouter(withStyles(styles)(ButtonBases))","import React, {lazy, Suspense} from 'react';\nimport {createUseStyles} from 'react-jss';\nimport {connect} from 'react-redux';\n\n\n\n\nimport Carousel from '../Widget/Slick/SingleItem'\nimport CategoryOverviewBox from '../Widget/CategoryOverviewBox'\nimport {isImgOnlySections} from \"../../api/ApiUtils\";\nimport LoadingPage from '../Layout/LoadingPage'\n\n\nconst SectionBanner = lazy(() => import('./Sections/Banner'));\nconst SectionTopInterest = lazy(() => import('./Sections/TopInterest'));\nconst SectionFeatureProducts = lazy(() => import('./Sections/FeatureProducts'));\nconst FEATURED_PRODUCTS = 'featured';\n\n\nconst styles = createUseStyles({\n    section: {\n        width: '100%',\n        margin: '0 80px'\n    },\n    productCategory: {\n        paddingTop: '40px',\n\n        paddingBottom: '40px',\n        // backgroundColor: theme.palette.background.paper\n    },\n    text: {\n        textAlign: 'center',\n        // color: theme.palette.secondary.light,\n        marginBottom: '30px',\n        wordWrap: 'break-word',\n        wordBreak: 'break-all'\n\n    },\n    title: {\n        paddingTop: '20px',\n        marginTop: '50px',\n        fontWeight: '700',\n        // color: theme.palette.primary.dark,\n        marginBottom: '20px',\n        textAlign: 'center'\n    }\n});\n\n\nconst mapStateToProps = state => ({\n    products: state.product.products,\n    feeds: state.feed.feeds,\n    category: state.category.category,\n});\n\nconst mapDispatchToProps = dispatch => ({}\n);\n\nconst MainPageOverview = props => {\n    const classes = styles();\n\n\n    const {feeds, products, history, category} = props;\n    let getDataFromAPI = (feeds === null && products === null);\n    if (getDataFromAPI) return <LoadingPage/>;\n    let latestArticle = feeds && feeds.filter((n, i) => isImgOnlySections(n.sections)).filter((n, i) => i < 3);\n    let hasProductsToShow = (products && products.length > 0);\n    let hasFeedsToShow = (feeds && feeds.length > 0);\n    let hasCategoryToShow = (category.length > 0);\n    let hasSelectedProductsToShow = hasProductsToShow && products\n        .filter(n => n.tags.find(m => m.toLowerCase() === FEATURED_PRODUCTS)).length > 0;\n\n\n    // if (!(hasProductsToShow) && !(hasFeedsToShow))\n    //     return <Grid xs={12}>\n    //         <Carousel\n    //             data={new Array(3).fill(1)\n    //                 .map((n, i) => ({\n    //                     url: `img/init/photo${i + 1}.jpeg`,\n    //                 }))}\n\n    //             title={[\n    //                 'shops is under construction',\n    //                 'there is no products and feeds in this shops yet',\n\n    //                 'please wait']}\n\n\n    //         />\n    //     </Grid>;\n\n\n    return <div>\n\n{/* // <Grid container alignItems={'flex-start'} justify={'center'}>\n        //     <Suspense fallback={null}>\n        //         <SectionBanner\n        //             hasFeedsToShow={hasFeedsToShow}\n        //             latestArticle={latestArticle}\n        //             feeds={feeds}\n        //         />\n        //     </Suspense>\n        //     {\n        //         <Suspense fallback={null}>\n        //             <SectionTopInterest self={props}/>\n        //         </Suspense>\n\n        //     }\n\n        //     {\n        //         hasCategoryToShow && <Grid item container alignItems={'center'} justify={'center'}\n        //                                    className={classes.productCategory}>\n\n        //             <Grid item xs={10} md={10} lg={10}>\n        //                 <CategoryOverviewBox\n        //                     category={category}\n        //                 />\n        //             </Grid>\n\n        //         </Grid>\n        //     }\n        //     {\n        //         <Suspense fallback={null}>\n        //             <SectionFeatureProducts self={props}/>\n        //         </Suspense>\n\n        //     }\n\n\n        // </Grid>   */}\n        \n    </div>;\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPageOverview)"],"sourceRoot":""}