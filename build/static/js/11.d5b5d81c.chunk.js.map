{"version":3,"sources":["components/Checkout/Overview.js"],"names":["styles","createUseStyles","wrapper","padding","display","formGroup","flex","margin","&:first-child","marginLeft","&:last-child","marginRight","formInput","width","height","borderRadius","border","inputSet","marginTop","inputGroup","inputWrapper","phoneInput","& > div","& > div > input","@media (max-width: 1200px)","@media (max-width: 600px)","withCookies","connect","state","items","cart","order","dispatch","ownProps","placeOrder","_placeOrder","Object","_Users_lawson_work_oneshop_development_os_theme_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_lawson_work_oneshop_development_os_theme_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","result","wrap","_context","prev","next","agree","toast","error","position","POSITION","TOP_RIGHT","cookies","get","agent","Checkout","getCart","sent","data","rows","shift","id","set","placeOrderWithoutLogin","_Users_lawson_work_oneshop_development_os_theme_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","remove","type","INIT_CART","payload","success","t0","response","messages","join","message","stop","_x","apply","this","arguments","updateOrder","info","CART_UPDATE_ORDER_INFO","checkCoupons","_checkCoupons","_callee2","codes","errors","coupons","_context2","length","getPromoCode","reduce","container","coupon","code","split","filter","c","forEach","push","concat","_x2","editProductSort","key","value","PRODUCT_EDIT_SORT","editProductFilter","PRODUCT_EDIT_FILTER","props","classes","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","_Layout_Body_Header__WEBPACK_IMPORTED_MODULE_14__","title","useI18nText","keyOfI18n","CHECKOUT","className","_Widget_I18nText__WEBPACK_IMPORTED_MODULE_16__","CHECKOUT_YOUR_ORDER_SUMMARY","style","boxShadow","backgroundColor","PRODUCTS","PRICE","map","item","idx","name","qty","variant","react_number_format__WEBPACK_IMPORTED_MODULE_8__","price","thousandSeparator","prefix","displayType","CART_NO_ITEMS_TO_SHOW","total","colSpan","onChange","e","target","checked","htmlFor","TERM_AND_CONDITIONS","onClick","ORDER_SUMMARY_PLACE_ORDER","CHECKOUT_PROMO_CODE","placeholder","PROMO_CODE_TYPE_YOUR_PROMO_CODE_HERE","minHeight","PROMO_CODE_CHECK_BTN","CHECKOUT_BILLING_DETAIL","FIRST_NAME","contact","first_name","LAST_NAME","last_name","EMAIL_ADDRESS","email","react_phone_number_input__WEBPACK_IMPORTED_MODULE_11__","classNames","CHECKOUT_BILLING_DETAIL_PHONE_PLACEHOLDER","phone","CHECKOUT_BILLING_STREET_ADDRESS","shipping","address","format","CHECKOUT_BILLING_DETAIL_VISA_PLACEHOLDER","onValueChange","_ref","payment","card","CHECKOUT_BILLING_EXPIRY_DATE","mask","_ref2","formattedValue","exp_date","CHECKOUT_BILLING_CVC","_ref3","csc"],"mappings":"6RAsBMA,EAASC,YAAgB,CAC3BC,QAAS,CACLC,QAAS,OACTC,QAAS,QAEbC,UAAW,CACPC,KAAM,EACNC,OAAQ,SACRC,gBAAiB,CACbC,WAAY,GAEhBC,eAAgB,CACZC,YAAa,IAGrBC,UAAW,CACPC,MAAO,OACPC,OAAQ,GACRC,aAAc,EACdC,OAAQ,oBACRb,QAAS,UAEbc,SAAU,CACNV,OAAQ,iBACRC,gBAAiB,CACbU,WAAY,IAGpBC,WAAY,CACRf,QAAS,QAEbgB,aAAc,CACVhB,QAAS,OACTE,KAAM,EACNC,OAAQ,GAEZc,WAAY,CACRjB,QAAS,OACTkB,UAAW,CACPhB,KAAM,GAEViB,kBAAmB,CACfV,MAAO,SAOfW,6BAA8B,CAC1BL,WAAY,CACRf,QAAS,SAEba,SAAU,CACNP,eAAgB,CACZQ,UAAW,MAQvBO,4BAA6B,CACzBvB,QAAS,CACLE,QAAS,SAEbC,UAAW,CACPE,OAAQ,EACRG,eAAgB,CACZQ,UAAW,KAGnBC,WAAY,CACRf,QAAS,SAEba,SAAU,CACNP,eAAgB,CACZQ,UAAW,QA0eZQ,sBAAYC,YAneH,SAAAC,GAAK,MAAK,CAC9BC,MAAOD,EAAME,KAAKD,MAClBE,MAAOH,EAAME,KAAKC,QAIK,SAACC,EAAUC,GAAX,MAAyB,CAChDC,WAAU,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAAC,EAAMV,GAAN,IAAAD,EAAAY,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACHf,EAAMgB,MADH,CAAAH,EAAAE,KAAA,QAGJE,IAAMC,MAAM,kEAAmE,CAC3EC,SAAUF,IAAMG,SAASC,YAJzBR,EAAAE,KAAA,mBAAAF,EAAAC,KAAA,EASIf,EAAOG,EAASoB,QAAQC,IAAI,QAASZ,EAAS,KAE7CZ,EAXL,CAAAc,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAYmBS,IAAMC,SAASC,UAZlC,OAYIf,EAZJE,EAAAc,MAaI5B,OAAYY,GAAU,IAAIiB,MAAQ,IAAIA,MAAQ,IAAIC,MAAQ,IAAIC,SAAW,IAAIC,KACnE7B,EAASoB,QAAQU,IAAI,OAAQjC,GAd3C,eAAAc,EAAAE,KAAA,GAiBeS,IAAMC,SAASQ,uBAAf5B,OAAA6B,EAAA,EAAA7B,CAAA,GACRL,EADQ,CAEXF,MAAOC,KAnBX,WAiBAY,EAjBAE,EAAAc,OAqBgB,IAAIC,MAAQ,IAAIjB,SAE5BT,EAASoB,QAAQa,OAAO,QAExBlC,EAEI,CACImC,KAAMC,IACNC,QAAS,KAIjBrB,IAAMsB,QAAQ,mBAAoB,CAC9BpB,SAAUF,IAAMG,SAASC,aAlCjCR,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA2B,GAAA3B,EAAA,SAuCAI,IAAMC,QAAQL,EAAA2B,GAAMC,SAASb,MAAQ,IAAIc,UAAY,IAAIC,KAAK,OAAS9B,EAAA2B,GAAMI,QAAS,CAClFzB,SAAUF,IAAMG,SAASC,YAxC7B,yBAAAR,EAAAgC,SAAAnC,EAAA,kBAAF,gBAAAoC,GAAA,OAAA1C,EAAA2C,MAAAC,KAAAC,YAAA,GA6CVC,YAAa,SAAAC,GAAI,OAAIlD,EAAS,CAC1BmC,KAAMgB,IACNd,QAASa,KAEbE,aAAY,eAAAC,EAAAjD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAA8C,EAAMC,GAAN,IAAA7C,EAAA8C,EAAAC,EAAA,OAAAnD,EAAAC,EAAAI,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,YACNyC,EAAMI,OAAS,GADT,CAAAD,EAAA5C,KAAA,QAGNE,IAAMC,MAAM,mCAAoC,CAC5CC,SAAUF,IAAMG,SAASC,YAJvBsC,EAAA5C,KAAA,uBAAA4C,EAAA7C,KAAA,EAAA6C,EAAA5C,KAAA,EASiBS,IAAMC,SAASoC,aAAaL,GAT7C,UASE7C,EATFgD,EAAAhC,OAWc,IAAIC,MAAQ,IAAIjB,SACxB8C,EAAS,GACTC,IAAY/C,EAAOiB,KAAKA,MAAQ,IAAIC,MAAQ,IAAIiC,OAAO,SAACC,EAAWC,GAEnE,OADAD,EAAUC,EAAOC,MAAQD,EAClBD,GACR,IACHP,EAAMU,MAAM,SAASC,OAAO,SAAAC,GAAC,OAAIA,IAAGC,QAAQ,SAAAL,GACnCN,EAAQM,IACTP,EAAOa,KAAP,GAAAC,OAAeP,EAAf,mBAGJP,EAAOG,OAAS,EAEhB3C,IAAMC,MAAMuC,EAAOd,KAAK,MAAO,CAC3BxB,SAAUF,IAAMG,SAASC,YAI7BJ,IAAMsB,QAAQ,yBAA0B,CACpCpB,SAAUF,IAAMG,SAASC,aA9BnCsC,EAAA5C,KAAA,iBAAA4C,EAAA7C,KAAA,GAAA6C,EAAAnB,GAAAmB,EAAA,SAoCF1C,IAAMC,QAAQyC,EAAAnB,GAAMC,SAASb,MAAQ,IAAIc,UAAY,IAAIC,KAAK,OAASgB,EAAAnB,GAAMI,QAAS,CAClFzB,SAAUF,IAAMG,SAASC,YArC3B,yBAAAsC,EAAAd,SAAAU,EAAA,kBAAF,gBAAAiB,GAAA,OAAAlB,EAAAP,MAAAC,KAAAC,YAAA,GA4CZwB,gBAAiB,SAACC,EAAKC,GAAN,OAAgB1E,EAAS,CACtCmC,KAAMwC,IACNtC,QAAS,CACLoC,IAAKA,EACLC,MAAOA,MAGfE,kBAAmB,SAACH,EAAKC,GAAN,OAAgB1E,EAAS,CACxCmC,KAAM0C,IACNxC,QAAS,CACLoC,IAAKA,EACLC,MAAOA,QAoXQ/E,CA/WF,SAAAmF,GACrB,IAAMC,EAAU/G,IACT6B,EAAgBiF,EAAhBjF,MAAgBiF,EAAT/E,MAEd,OAAOiF,EAAAzE,EAAA0E,cAAA,WACHD,EAAAzE,EAAA0E,cAACC,EAAA,EAAD,CAAQC,MAAOC,YAAYC,IAAUC,YACrCN,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ7G,SACpB8G,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ1G,WACpB2G,EAAAzE,EAAA0E,cAAA,WACID,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAACO,EAAA,EAAD,CAAUH,UAAWA,IAAUI,+BAEnCT,EAAAzE,EAAA0E,cAAA,SACIS,MAAO,CACH7G,MAAO,OACP8G,UAAW,uGACX5G,aAAc,EACd6G,gBAAiB,UACjBzH,QAAQ,SAGZ6G,EAAAzE,EAAA0E,cAAA,aACID,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAACO,EAAA,EAAD,CAAUH,UAAWA,IAAUQ,YAEnCb,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAACO,EAAA,EAAD,CAAUH,UAAWA,IAAUS,WAI3Cd,EAAAzE,EAAA0E,cAAA,cACMpF,GAAS,IAAIkG,IAAI,SAACC,EAAMC,GAAP,OAAejB,EAAAzE,EAAA0E,cAAA,MAAIR,IAAKwB,GACvCjB,EAAAzE,EAAA0E,cAAA,aAAAX,OAAQ0B,EAAKE,KAAb,OAAA5B,OAAuB0B,EAAKG,IAA5B,KAAA7B,OAAmC0B,EAAKI,QAAxC,MACApB,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAACoB,EAAA,EAAD,CACI3B,MAAOsB,EAAKM,MAAMN,EAAKG,IACvBI,mBAAmB,EACnBC,OAAQ,MACRC,YAAa,cAIvB5G,GAAS,IAAI8D,OAAS,GAAKqB,EAAAzE,EAAA0E,cAAA,UACzBD,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAACO,EAAA,EAAD,CAAUH,UAAWA,IAAUqB,4BAIzC7G,GAAS,IAAI8D,OAAS,GAAKqB,EAAAzE,EAAA0E,cAAA,aACzBD,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAAA,0BACAD,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAACoB,EAAA,EAAD,CACI3B,OAAQ7E,GAAS,IAAIgE,OAAO,SAAC8C,EAAOX,GAAR,OAAiBW,EAASX,EAAKG,IAAIH,EAAKM,OAAO,GAC3EC,mBAAmB,EACnBC,OAAQ,MACRC,YAAa,WAIzBzB,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAAA,MAAI2B,QAAQ,KACR5B,EAAAzE,EAAA0E,cAAA,SACInD,GAAG,QACHK,KAAK,WACL0E,SAAU,SAAAC,GAAC,OAAIhC,EAAM7B,YAAN7C,OAAA6B,EAAA,EAAA7B,CAAA,GACR0E,EAAM/E,MADE,CAEXgB,MAAO+F,EAAEC,OAAOC,cAGxBhC,EAAAzE,EAAA0E,cAAA,SAAOgC,QAAQ,SACXjC,EAAAzE,EAAA0E,cAACO,EAAA,EAAD,CAAUH,UAAWA,IAAU6B,yBAI3ClC,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAAA,MAAI2B,QAAQ,KACR5B,EAAAzE,EAAA0E,cAAA,UACI9C,KAAK,SACLgF,QAAS,SAAAL,GAAC,OAAIhC,EAAM5E,WAAW4E,EAAM/E,SAErCiF,EAAAzE,EAAA0E,cAACO,EAAA,EAAD,CAAUH,UAAWA,IAAU+B,kCAOvDpC,EAAAzE,EAAA0E,cAAA,WACAD,EAAAzE,EAAA0E,cAAA,WACID,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAACO,EAAA,EAAD,CAAUH,UAAWA,IAAUgC,uBAEnCrC,EAAAzE,EAAA0E,cAAA,SACIS,MAAO,CACH7G,MAAO,OACP8G,UAAW,uGACX5G,aAAc,EACd6G,gBAAiB,UACjBzH,QAAQ,SAGZ6G,EAAAzE,EAAA0E,cAAA,aACID,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAAA,SACI9C,KAAK,OACLmF,YAAalC,YAAYC,IAAUkC,sCACnC7B,MAAO,CACHvH,QAAS,SACTY,aAAc,EACdC,OAAQ,oBACRwI,UAAW,IAEfX,SAAU,SAAAC,GAAC,OAAIhC,EAAM7B,YAAN7C,OAAA6B,EAAA,EAAA7B,CAAA,GACR0E,EAAM/E,MADE,CAEX0D,QAASqD,EAAEC,OAAOrC,aAI9BM,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAAA,UACI9C,KAAK,SACLgF,QAAS,SAAAL,GAAC,OAAIhC,EAAM1B,cAAc0B,EAAM/E,OAAS,IAAI0D,SAAW,MAEhEuB,EAAAzE,EAAA0E,cAACO,EAAA,EAAD,CAAUH,UAAWA,IAAUoC,8BAQ3DzC,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ1G,WACpB2G,EAAAzE,EAAA0E,cAAA,UACID,EAAAzE,EAAA0E,cAACO,EAAA,EAAD,CAAUH,UAAWA,IAAUqC,2BAEnC1C,EAAAzE,EAAA0E,cAAA,WACID,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ9F,UACpB+F,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ5F,YACpB6F,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ3F,cACpB4F,EAAAzE,EAAA0E,cAAA,SACI9C,KAAK,OACLoD,UAAWR,EAAQnG,UACnB0I,YAAalC,YAAYC,IAAUsC,YACnCd,SAAU,SAAAC,GAAC,OAAIhC,EAAM7B,YAAN7C,OAAA6B,EAAA,EAAA7B,CAAA,GACR0E,EAAM/E,MADE,CAEX6H,QAAQxH,OAAA6B,EAAA,EAAA7B,CAAA,IACA0E,EAAM/E,OAAS,IAAI6H,QADpB,CAEHC,WAAYf,EAAEC,OAAOrC,eAKrCM,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ3F,cACpB4F,EAAAzE,EAAA0E,cAAA,SACI9C,KAAK,OACLoD,UAAWR,EAAQnG,UACnB0I,YAAalC,YAAYC,IAAUyC,WACnCjB,SAAU,SAAAC,GAAC,OAAIhC,EAAM7B,YAAN7C,OAAA6B,EAAA,EAAA7B,CAAA,GACR0E,EAAM/E,MADE,CAEX6H,QAAQxH,OAAA6B,EAAA,EAAA7B,CAAA,IACA0E,EAAM/E,OAAS,IAAI6H,QADpB,CAEHG,UAAWjB,EAAEC,OAAOrC,gBAMxCM,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ5F,YACpB6F,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ3F,cACpB4F,EAAAzE,EAAA0E,cAAA,SACI9C,KAAK,OACLoD,UAAWR,EAAQnG,UACnB0I,YAAalC,YAAYC,IAAU2C,eACnCnB,SAAU,SAAAC,GAAC,OAAIhC,EAAM7B,YAAN7C,OAAA6B,EAAA,EAAA7B,CAAA,GACR0E,EAAM/E,MADE,CAEX6H,QAAQxH,OAAA6B,EAAA,EAAA7B,CAAA,IACA0E,EAAM/E,OAAS,IAAI6H,QADpB,CAEHK,MAAOnB,EAAEC,OAAOrC,eAKhCM,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ3F,cACpB4F,EAAAzE,EAAA0E,cAACiD,EAAA,EAAD,CACI/F,KAAK,OACLoD,UAAW4C,IAAWpD,EAAQnG,UAAUmG,EAAQ1F,YAChDiI,YAAalC,YAAYC,IAAU+C,2CACnCvB,SAAU,SAAAnC,GAAK,OAAII,EAAM7B,YAAN7C,OAAA6B,EAAA,EAAA7B,CAAA,GACZ0E,EAAM/E,MADM,CAEf6H,QAAQxH,OAAA6B,EAAA,EAAA7B,CAAA,IACA0E,EAAM/E,OAAS,IAAI6H,QADpB,CAEHS,MAAO3D,YAM3BM,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ3F,cACpB4F,EAAAzE,EAAA0E,cAAA,SACI9C,KAAK,OACLoD,UAAWR,EAAQnG,UACnB0I,YAAalC,YAAYC,IAAUiD,iCACnCzB,SAAU,SAAAC,GAAC,OAAIhC,EAAM7B,YAAN7C,OAAA6B,EAAA,EAAA7B,CAAA,GACR0E,EAAM/E,MADE,CAEXwI,SAASnI,OAAA6B,EAAA,EAAA7B,CAAA,IACD0E,EAAM/E,OAAS,IAAIwI,SADnB,CAEJC,QAAS1B,EAAEC,OAAOrC,gBAMtCM,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ9F,UACpB+F,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ3F,cACpB4F,EAAAzE,EAAA0E,cAACoB,EAAA,EAAD,CACIoC,OAAO,sBACPlD,UAAWR,EAAQnG,UACnB0I,YAAalC,YAAYC,IAAUqD,0CACnCC,cAAe,SAAAC,GAAA,IAAElE,EAAFkE,EAAElE,MAAF,OAAaI,EAAM7B,YAAN7C,OAAA6B,EAAA,EAAA7B,CAAA,GACrB0E,EAAM/E,MADe,CAExB8I,QAAQzI,OAAA6B,EAAA,EAAA7B,CAAA,IACA0E,EAAM/E,OAAS,IAAI8I,QADpB,CAEHC,KAAMpE,WAKtBM,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ5F,YACpB6F,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ3F,cACpB4F,EAAAzE,EAAA0E,cAACoB,EAAA,EAAD,CACIoC,OAAO,QACPlD,UAAWR,EAAQnG,UACnB0I,YAAalC,YAAYC,IAAU0D,8BACnCC,KAAM,CAAC,IAAK,IAAK,IAAK,KACtBL,cAAe,SAAAM,GAAA,IAAEC,EAAFD,EAAEC,eAAF,OAAsBpE,EAAM7B,YAAN7C,OAAA6B,EAAA,EAAA7B,CAAA,GAC9B0E,EAAM/E,MADwB,CAEjC8I,QAAQzI,OAAA6B,EAAA,EAAA7B,CAAA,IACA0E,EAAM/E,OAAS,IAAI8I,QADpB,CAEHM,SAAUD,WAK1BlE,EAAAzE,EAAA0E,cAAA,OAAKM,UAAWR,EAAQ3F,cACpB4F,EAAAzE,EAAA0E,cAACoB,EAAA,EAAD,CACIoC,OAAO,MACPlD,UAAWR,EAAQnG,UACnB0I,YAAalC,YAAYC,IAAU+D,sBACnCT,cAAe,SAAAU,GAAA,IAAE3E,EAAF2E,EAAE3E,MAAF,OAAaI,EAAM7B,YAAN7C,OAAA6B,EAAA,EAAA7B,CAAA,GACrB0E,EAAM/E,MADe,CAExB8I,QAAQzI,OAAA6B,EAAA,EAAA7B,CAAA,IACA0E,EAAM/E,OAAS,IAAI8I,QADpB,CAEHS,IAAK5E","file":"static/js/11.d5b5d81c.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {createUseStyles} from 'react-jss';\nimport {withCookies} from 'react-cookie';\n\nimport _ from 'lodash';\nimport NumberFormat from 'react-number-format';\nimport { toast } from 'react-toastify';\nimport classNames from 'classnames';\nimport PhoneInput from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\n\nimport agent from \"../../agent\";\n\nimport Header from '../Layout/Body/Header'\nimport {EDIT_PRODUCT_VIEW_MODE, PRODUCT_EDIT_FILTER, PRODUCT_EDIT_SORT, INIT_CART, CART_UPDATE_ORDER_INFO} from \"../../constants/actionType\";\n\nimport {I18nText} from \"../Widget/I18nText\";\nimport {keyOfI18n} from \"../../constants/locale/interface\";\nimport {useI18nText} from \"../../hooks/useI18nText\";\n\n\nconst styles = createUseStyles({\n    wrapper: {\n        padding: '0 9%',\n        display: 'flex'\n    },\n    formGroup: {\n        flex: 1,\n        margin: '0 10px',\n        '&:first-child': {\n            marginLeft: 0\n        },\n        '&:last-child': {\n            marginRight: 0\n        }\n    },\n    formInput: {\n        width: '100%',\n        height: 40,\n        borderRadius: 5,\n        border: '1px solid #dadada',\n        padding: '0 15px'\n    },\n    inputSet: {\n        margin: '15px -5px -5px',\n        '&:first-child': {\n            marginTop: -5\n        }\n    },\n    inputGroup: {\n        display: 'flex'\n    },\n    inputWrapper: {\n        display: 'flex',\n        flex: 1,\n        margin: 5\n    },\n    phoneInput: {\n        display: 'flex',\n        '& > div': {\n            flex: 1\n        },\n        '& > div > input': {\n            width: '100%'\n        }\n    },\n\n\n\n    // for tablet\n    '@media (max-width: 1200px)': {\n        inputGroup: {\n            display: 'block'\n        },\n        inputSet: {\n            '&:last-child': {\n                marginTop: 30\n            }\n        }\n    },\n\n\n\n    // for mobile\n    '@media (max-width: 600px)': {\n        wrapper: {\n            display: 'block'\n        },\n        formGroup: {\n            margin: 0,\n            '&:last-child': {\n                marginTop: 60\n            }\n        },\n        inputGroup: {\n            display: 'block'\n        },\n        inputSet: {\n            '&:last-child': {\n                marginTop: 30\n            }\n        }\n    }\n});\n\n\nconst mapStateToProps = state => ({\n    items: state.cart.items,\n    order: state.cart.order\n\n    // user: state.auth.user,\n});\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    placeOrder: async order => {\n        if (!order.agree) {\n            // return error\n            toast.error('Please accept the terms and conditions to continue your action.', {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else {\n            try {\n                // get shopping cart\n                let cart = ownProps.cookies.get('cart'), result = null;\n                // no shopping cart\n                if (!cart) {\n                    result = await agent.Checkout.getCart();\n                    cart = (((((result || {}).data || {}).data || {}).rows || []).shift() || {}).id;\n                    if (cart) ownProps.cookies.set('cart', cart);\n                }\n                // add item\n                result = await agent.Checkout.placeOrderWithoutLogin({\n                    ...order,\n                    items: cart\n                });\n                if (((result || {}).data || {}).result) {\n                    // remove cart\n                    ownProps.cookies.remove('cart');\n                    // clear items\n                    dispatch(\n                \n                        {\n                            type: INIT_CART,\n                            payload: [],\n                        }\n                    );\n                    // return result\n                    toast.success('Order successed.', {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            } catch (error) {\n                // return error\n                toast.error(((error.response.data || {}).messages || []).join(\"\\n\") || error.message, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        }\n    },\n    updateOrder: info => dispatch({\n        type: CART_UPDATE_ORDER_INFO,\n        payload: info,\n    }),\n    checkCoupons: async codes => {\n        if (codes.length < 1) {\n            // return error\n            toast.error('Please enter the coupon code(s).', {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else {\n            try {\n                // check coupons\n                var result = await agent.Checkout.getPromoCode(codes);\n                // success\n                if (((result || {}).data || {}).result) {\n                    var errors = [];\n                    var coupons = ((result.data.data || {}).rows || []).reduce((container, coupon) => {\n                        container[coupon.code] = coupon;\n                        return container;\n                    }, {});\n                    codes.split(/ *, */).filter(c => c).forEach(coupon => {\n                        if (!coupons[coupon]) {\n                            errors.push(`${coupon} is invalid.`);\n                        }\n                    });\n                    if (errors.length > 0) {\n                        // return result\n                        toast.error(errors.join(\"\\n\"), {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    } else {\n                        // return result\n                        toast.success('All coupons are valid.', {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                }\n            } catch (error) {\n                // return error\n                toast.error(((error.response.data || {}).messages || []).join(\"\\n\") || error.message, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        }\n    },\n\n\n    editProductSort: (key, value) => dispatch({\n        type: PRODUCT_EDIT_SORT,\n        payload: {\n            key: key,\n            value: value,\n        },\n    }),\n    editProductFilter: (key, value) => dispatch({\n        type: PRODUCT_EDIT_FILTER,\n        payload: {\n            key: key,\n            value: value,\n        },\n    }),\n});\n\nconst CheckoutOverview = props => {\n    const classes = styles();\n    const {items, order} = props;\n\n    return <div>\n        <Header title={useI18nText(keyOfI18n.CHECKOUT)}/>\n        <div className={classes.wrapper}>\n            <div className={classes.formGroup}>\n                <div>\n                    <h3>\n                        <I18nText keyOfI18n={keyOfI18n.CHECKOUT_YOUR_ORDER_SUMMARY}/>\n                    </h3>\n                    <table\n                        style={{\n                            width: '100%',\n                            boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\n                            borderRadius: 4,\n                            backgroundColor: '#f7f7f7',\n                            padding:\"15px\"\n                        }}\n                    >\n                        <thead>\n                            <tr>\n                                <td>\n                                    <I18nText keyOfI18n={keyOfI18n.PRODUCTS}/>\n                                </td>\n                                <td>\n                                    <I18nText keyOfI18n={keyOfI18n.PRICE}/>\n                                </td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {(items || []).map((item, idx) => <tr key={idx}>\n                                <td>{`${item.name} x ${item.qty}(${item.variant})`}</td>\n                                <td>\n                                    <NumberFormat\n                                        value={item.price*item.qty}\n                                        thousandSeparator={true}\n                                        prefix={'HK$'}\n                                        displayType={'text'}\n                                    />\n                                </td>\n                            </tr>)}\n                            {(items || []).length < 1 && <tr>\n                                <td>\n                                    <I18nText keyOfI18n={keyOfI18n.CART_NO_ITEMS_TO_SHOW}/>\n                                </td>    \n                            </tr>}\n                        </tbody>\n                        {(items || []).length > 0 && <tfoot>\n                            <tr>\n                                <td>Total Amount</td>\n                                <td>\n                                    <NumberFormat\n                                        value={(items || []).reduce((total, item) => total += item.qty*item.price, 0)}\n                                        thousandSeparator={true}\n                                        prefix={'HK$'}\n                                        displayType={'text'}\n                                    />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td colSpan=\"2\">\n                                    <input\n                                        id=\"agree\"\n                                        type=\"checkbox\"\n                                        onChange={e => props.updateOrder({\n                                            ...props.order,\n                                            agree: e.target.checked\n                                        })}\n                                    />\n                                    <label htmlFor=\"agree\">\n                                        <I18nText keyOfI18n={keyOfI18n.TERM_AND_CONDITIONS}/>\n                                    </label>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td colSpan=\"2\">\n                                    <button\n                                        type=\"button\"\n                                        onClick={e => props.placeOrder(props.order)}\n                                    >\n                                        <I18nText keyOfI18n={keyOfI18n.ORDER_SUMMARY_PLACE_ORDER}/>\n                                    </button>\n                                </td>\n                            </tr>\n                        </tfoot>}\n                    </table>\n                </div>\n                <br/>\n                <div>\n                    <h3>\n                        <I18nText keyOfI18n={keyOfI18n.CHECKOUT_PROMO_CODE}/>\n                    </h3>\n                    <table\n                        style={{\n                            width: '100%',\n                            boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\n                            borderRadius: 4,\n                            backgroundColor: '#f7f7f7',\n                            padding:\"15px\"\n                        }}\n                    >\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <input\n                                        type=\"text\"\n                                        placeholder={useI18nText(keyOfI18n.PROMO_CODE_TYPE_YOUR_PROMO_CODE_HERE)}\n                                        style={{\n                                            padding: '0 10px',\n                                            borderRadius: 5,\n                                            border: '1px solid #dadada',\n                                            minHeight: 40\n                                        }}\n                                        onChange={e => props.updateOrder({\n                                            ...props.order,\n                                            coupons: e.target.value\n                                        })}\n                                    />\n                                </td>\n                                <td>\n                                    <button\n                                        type=\"button\"\n                                        onClick={e => props.checkCoupons((props.order || {}).coupons || '')}\n                                    >\n                                        <I18nText keyOfI18n={keyOfI18n.PROMO_CODE_CHECK_BTN}/>\n                                    </button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <div className={classes.formGroup}>\n                <h3>\n                    <I18nText keyOfI18n={keyOfI18n.CHECKOUT_BILLING_DETAIL}/>\n                </h3>\n                <div>\n                    <div className={classes.inputSet}>\n                        <div className={classes.inputGroup}>\n                            <div className={classes.inputWrapper}>\n                                <input\n                                    type=\"text\"\n                                    className={classes.formInput}\n                                    placeholder={useI18nText(keyOfI18n.FIRST_NAME)}\n                                    onChange={e => props.updateOrder({\n                                        ...props.order,\n                                        contact: {\n                                            ...(props.order || {}).contact,\n                                            first_name: e.target.value\n                                        }\n                                    })}\n                                />\n                            </div>\n                            <div className={classes.inputWrapper}>\n                                <input\n                                    type=\"text\"\n                                    className={classes.formInput}\n                                    placeholder={useI18nText(keyOfI18n.LAST_NAME)}\n                                    onChange={e => props.updateOrder({\n                                        ...props.order,\n                                        contact: {\n                                            ...(props.order || {}).contact,\n                                            last_name: e.target.value\n                                        }\n                                    })}\n                                />\n                            </div>\n                        </div>\n                        <div className={classes.inputGroup}>\n                            <div className={classes.inputWrapper}>\n                                <input\n                                    type=\"text\"\n                                    className={classes.formInput}\n                                    placeholder={useI18nText(keyOfI18n.EMAIL_ADDRESS)}\n                                    onChange={e => props.updateOrder({\n                                        ...props.order,\n                                        contact: {\n                                            ...(props.order || {}).contact,\n                                            email: e.target.value\n                                        }\n                                    })}\n                                />\n                            </div>\n                            <div className={classes.inputWrapper}>\n                                <PhoneInput\n                                    type=\"text\"\n                                    className={classNames(classes.formInput,classes.phoneInput)}\n                                    placeholder={useI18nText(keyOfI18n.CHECKOUT_BILLING_DETAIL_PHONE_PLACEHOLDER)}\n                                    onChange={value => props.updateOrder({\n                                        ...props.order,\n                                        contact: {\n                                            ...(props.order || {}).contact,\n                                            phone: value\n                                        }\n                                    })}\n                                />\n                            </div>\n                        </div>\n                        <div className={classes.inputWrapper}>\n                            <input\n                                type=\"text\"\n                                className={classes.formInput}\n                                placeholder={useI18nText(keyOfI18n.CHECKOUT_BILLING_STREET_ADDRESS)}\n                                onChange={e => props.updateOrder({\n                                    ...props.order,\n                                    shipping: {\n                                        ...(props.order || {}).shipping,\n                                        address: e.target.value\n                                    }\n                                })}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.inputSet}>\n                        <div className={classes.inputWrapper}>\n                            <NumberFormat\n                                format=\"#### #### #### ####\"\n                                className={classes.formInput}\n                                placeholder={useI18nText(keyOfI18n.CHECKOUT_BILLING_DETAIL_VISA_PLACEHOLDER)}\n                                onValueChange={({value}) => props.updateOrder({\n                                    ...props.order,\n                                    payment: {\n                                        ...(props.order || {}).payment,\n                                        card: value\n                                    }\n                                })}\n                            />\n                        </div>\n                        <div className={classes.inputGroup}>\n                            <div className={classes.inputWrapper}>\n                                <NumberFormat\n                                    format=\"##/##\"\n                                    className={classes.formInput}\n                                    placeholder={useI18nText(keyOfI18n.CHECKOUT_BILLING_EXPIRY_DATE)}\n                                    mask={['M', 'M', 'Y', 'Y']}\n                                    onValueChange={({formattedValue}) => props.updateOrder({\n                                        ...props.order,\n                                        payment: {\n                                            ...(props.order || {}).payment,\n                                            exp_date: formattedValue\n                                        }\n                                    })}\n                                />\n                            </div>\n                            <div className={classes.inputWrapper}>\n                                <NumberFormat\n                                    format=\"###\"\n                                    className={classes.formInput}\n                                    placeholder={useI18nText(keyOfI18n.CHECKOUT_BILLING_CVC)}\n                                    onValueChange={({value}) => props.updateOrder({\n                                        ...props.order,\n                                        payment: {\n                                            ...(props.order || {}).payment,\n                                            csc: value\n                                        }\n                                    })}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>;\n\n    // const rendering = (!(props.shoppingCart) || props.user === null);\n    // const needLogin = (_.isEmpty(props.user));\n    // const NoProductsInCart = (props.shoppingCart.length < 1);\n\n    // switch (true) {\n    //     case rendering:\n    //         return <LoadingPage/>;\n    //     // case needLogin: {\n    //     //\n    //     //     redirectUrl('/login', props.history, false);\n    //     //     props.enqueueSnackbar('please log in first in order to checkout your products', styleGuide.warningSnackbar);\n    //     //     return null\n    //     // }\n    //     case NoProductsInCart:\n    //         return (<Grid container alignItems={'center'} justify={'center'}>\n\n    //             <Header\n    //                 title={'confirmPage'}/>\n    //             <Grid item container xs={6} spacing={16} className={classes.form}>\n    //                 <Grid item>\n\n    //                     <Typography variant={'h6'} color={'primary'}>\n    //                        <I18nText keyOfI18n={keyOfI18n.CART_NO_ITEMS_TO_SHOW}/> \n    //                     </Typography>\n    //                 </Grid>\n\n    //                 <Grid item container alignItems={'center'} spacing={16}>\n    //                     <Grid item>\n    //                         <Typography variant={'subtitle1'} color={'primary'}>\n    //                             <I18nText keyOfI18n={keyOfI18n.GOTO}/>\n    //                         </Typography>\n    //                     </Grid>\n    //                     <Grid item>\n    //                         <Button\n    //                             variant='outlined'\n    //                             onClick={() => redirectUrl('/products', props.history)}\n\n    //                         >\n    //                             <I18nText keyOfI18n={keyOfI18n.PRODUCTS}/>\n    //                         </Button>\n    //                     </Grid>\n    //                     <Grid item>\n    //                         <Typography variant={'subtitle1'} color={'primary'}>\n    //                          <I18nText keyOfI18n={keyOfI18n.CHECKOUT_TO_BUY_SOME}/>\n    //                         </Typography>\n    //                     </Grid>\n    //                 </Grid>\n    //             </Grid>\n    //         </Grid>);\n    //     default:\n    //         return (\n    //             <Grid container justify={'center'}>\n    //                 <Grid item sm={12}>\n    //                     <Header title={useI18nText(keyOfI18n.CHECKOUT)}/>\n    //                 </Grid>\n    //                 <Grid item container justify={'center'} spacing={32} md={10}>\n\n    //                     {(isWidthUp('md', props.width)) ?\n    //                         (<Fragment>\n    \n    //                         </Fragment>)\n    //                         : (<Fragment>\n    //                             <Grid item xs={11}>\n    //                                 <Collapse\n    //                                     arrow={true}\n    //                                     title={<Fragment>\n    //                                         <Typography\n    //                                             className={classes.title}\n    //                                             variant={'h4'}>\n    //                                             <I18nText keyOfI18n={keyOfI18n.CHECKOUT_YOUR_ORDER_SUMMARY}/>\n    //                                         </Typography>\n\n    //                                         <Divider/>\n    //                                     </Fragment>}\n    //                                     collapse={\n    //                                         <OrderSummary/>\n    //                                     }\n    //                                 />\n    //                             </Grid>\n    //                             <Grid item xs={11}>\n    //                                 <Typography\n    //                                     className={classes.title}\n    //                                     variant={'h4'}>\n    //                                     <I18nText keyOfI18n={keyOfI18n.CHECKOUT_BILLING_DETAIL}/>\n    //                                 </Typography>\n    //                                 <Divider/>\n    //                                 <BillingDetails/>\n\n    //                             </Grid>\n    //                         </Fragment>)\n\n    //                     }\n    //                 </Grid>\n\n\n    //             </Grid>\n    //         )\n    // }\n};\n\nexport default withCookies(connect(mapStateToProps, mapDispatchToProps)(CheckoutOverview));"],"sourceRoot":""}