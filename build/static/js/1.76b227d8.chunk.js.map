{"version":3,"sources":["components/Widget/FeedsWall/BigFeedBox.js","components/Widget/FeedsWall/SmallFeedBox.js","components/Widget/FeedsWall/Wrapper.js","components/MainPage/Sections/Banner.js"],"names":["FeedsWall","_this","this","_this$props","props","classes","title","backgroundImg","link","react_default","a","createElement","className","iAmDiv","index_es","container","alignItems","justify","root","style","backgroundImage","onClick","redirectUrl","history","variant","React","Component","withRouter","withStyles","theme","height","backgroundSize","backgroundPosition","backgroundColor","cursor","marginBottom","color","fontWeight","textAlign","left","right","item","direction","sm","data","length","md","BigFeedBox","id","sections","medias","url","refactorTitle","SmallFeedBox","width","padding","description","smallDiv","backgroundRepeat","bigDiv","paddingRight","paddingLeft","Banner","hasFeedsToShow","latestArticle","feeds","react","xs","SingleItem","map","n","concat","marginTop","Wrapper","filter","i","isImgOnlySections"],"mappings":"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","file":"static/js/1.76b227d8.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {redirectUrl} from \"../../../api/ApiUtils\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: '400px',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundColor: '#d3dbe2',\r\n        cursor: 'pointer',\r\n        marginBottom: 35,\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontWeight: '900',\r\n        textAlign: 'center',\r\n    }, iAmDiv: {}\r\n});\r\n\r\n\r\nclass FeedsWall extends React.Component {\r\n\r\n\r\n    render() {\r\n        const {classes, title, backgroundImg, link} = this.props;\r\n\r\n        return (\r\n            <div className={classes.iAmDiv}>\r\n                <Grid container alignItems={'center'} justify={'center'} className={classes.root} style={{\r\n                    backgroundImage: 'url(' + backgroundImg + ')'\r\n                }} onClick={() => redirectUrl(link, this.props.history)}>\r\n                    <Typography variant={'display1'} className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nFeedsWall.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(FeedsWall))","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Grid} from '@material-ui/core';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {redirectUrl} from \"../../../api/ApiUtils\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        backgroundColor: '#F6F6F6',\r\n        cursor: 'pointer',\r\n        marginBottom: 35,\r\n\r\n    },\r\n});\r\n\r\n\r\nclass FeedsWall extends React.Component {\r\n    render() {\r\n        const {classes, left, right, link} = this.props;\r\n\r\n        return (\r\n            <Grid container alignItems={'center'} className={classes.root}\r\n                  onClick={() => redirectUrl(link, this.props.history)}>\r\n                <Grid item container direction={'column'} justify={'flex-start'} alignItems={'center'} sm={5}>\r\n                    {left}\r\n                </Grid>\r\n                <Grid item sm={7} container direction={'column'} justify={'flex-end'} alignItems={'center'}>\r\n                    {right}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nFeedsWall.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(FeedsWall))","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport BigFeedBox from './BigFeedBox'\r\nimport SmallFeedBox from './SmallFeedBox'\r\nimport {refactorTitle} from \"../../../api/ApiUtils\";\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    smallDiv: {\r\n        height: '200px',\r\n\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n    },\r\n    bigDiv: {\r\n        height: '400px',\r\n\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n\r\n\r\n    },\r\n    left: {\r\n        paddingRight: 20,\r\n        paddingLeft: 30,\r\n\r\n    },\r\n    right: {\r\n        paddingLeft: 20,\r\n        paddingRight: 30,\r\n    }\r\n});\r\n\r\n\r\nclass FeedsWall extends React.Component {\r\n\r\n\r\n    render() {\r\n        const {classes, data,} = this.props;\r\n        return (data.length) ? <Grid container alignItems={'stretch'} className={classes.root}>\r\n            <Grid item md={6} className={classes.left}>\r\n                <BigFeedBox\r\n                    link={'/feeds/' + data[0].id}\r\n\r\n                    backgroundImg={data[0].sections[0].medias[0].url}\r\n                    title={refactorTitle(data[0].sections[0].title)}\r\n\r\n                />\r\n                {data[1] && <SmallFeedBox\r\n                    link={'/feeds/' + data[1].id}\r\n\r\n                    left={<div style={{\r\n                        height: '300px',\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: 'url(' + data[1].sections[0].medias[0].url + ')',\r\n                        width: '100%',\r\n                        backgroundPosition: 'center'\r\n                    }}></div>}\r\n                    right={<div style={{textAlign: 'center'}}>\r\n                        <Typography\r\n                            style={{padding: '0 20px'}}\r\n                            variant={'subheading'}\r\n                        >\r\n                            {data[1].sections[0].title}      </Typography>\r\n                        <br/>\r\n                        <Typography\r\n                            style={{padding: '0 20px', color: 'rgb(159, 159, 159)'}}\r\n                        >\r\n                            {data[1].sections[0].description}</Typography>\r\n\r\n                    </div>}\r\n\r\n                />}\r\n            </Grid>\r\n            <Grid item md={6} className={classes.right}>\r\n                {data[2] && <SmallFeedBox\r\n                    link={'/feeds/' + data[2].id}\r\n\r\n                    right={<div style={{\r\n                        height: '300px',\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: 'url(' + data[2].sections[0].medias[0].url + ')',\r\n                        width: '100%',\r\n                        backgroundPosition: 'center'\r\n                    }}></div>}\r\n                    left=\r\n                        {(<div style={{textAlign: 'center'}}>\r\n                            <Typography\r\n                                style={{padding: '0 20px'}}\r\n\r\n                                variant={'subheading'}\r\n                            >\r\n                                {data[2].sections[0].title}</Typography>\r\n                            <br/>\r\n                            <Typography\r\n                                style={{padding: '0 20px', color: 'rgb(159, 159, 159)'}}\r\n                            >\r\n                                {data[2].sections[0].description}</Typography>\r\n                        </div>)}\r\n\r\n                />}\r\n                {data[3] && <BigFeedBox\r\n                    link={'/feeds/' + data[3].id}\r\n                    title={refactorTitle(data[3].sections[0].title)}\r\n                    backgroundImg={data[3].sections[0].medias[0].url}\r\n\r\n                />}\r\n            </Grid>\r\n        </Grid> : null\r\n    }\r\n\r\n\r\n}\r\n\r\nFeedsWall.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FeedsWall)","import {isImgOnlySections, redirectUrl} from \"../../../api/ApiUtils\";\r\nimport React, {Fragment} from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport Carousel from '../../Widget/Slick/SingleItem'\r\nimport FeedsWall from '../../Widget/FeedsWall/Wrapper'\r\n\r\nconst Banner = props => {\r\n\r\n    const {\r\n        hasFeedsToShow,latestArticle,feeds,history\r\n    }= props\r\n    return hasFeedsToShow && <Fragment>\r\n        <Grid item xs={12}>\r\n            <Carousel\r\n                data={latestArticle.map(n => n.sections[0].medias[0])}\r\n                title={latestArticle.map(n => n.sections[0].title) || ''}\r\n                onClick={() => redirectUrl(`/feeds/${latestArticle.id}`,history)}/>\r\n        </Grid>\r\n        <Grid item xs={12} style={{marginTop: 80}}>\r\n            <FeedsWall\r\n                data={feeds.filter((n, i) => isImgOnlySections(n.sections))}\r\n            />\r\n        </Grid>\r\n    </Fragment>\r\n\r\n}\r\n\r\n\r\nexport default Banner\r\n"],"sourceRoot":""}