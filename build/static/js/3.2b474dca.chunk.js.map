{
  "version": 3,
  "sources": [
    "components/Widget/Slick/MultiplyItems.tsx",
    "components/MainPage/Sections/Widget/Slick.tsx",
    "components/MainPage/Sections/FeatureProducts.js"
  ],
  "names": [
    "react__WEBPACK_IMPORTED_MODULE_0__",
    "__webpack_require__",
    "react__WEBPACK_IMPORTED_MODULE_0___default",
    "n",
    "_Product_overviewBox__WEBPACK_IMPORTED_MODULE_1__",
    "_api_ApiUtils__WEBPACK_IMPORTED_MODULE_2__",
    "react_slick__WEBPACK_IMPORTED_MODULE_3__",
    "react_slick__WEBPACK_IMPORTED_MODULE_3___default",
    "_material_ui_styles__WEBPACK_IMPORTED_MODULE_4__",
    "_NextArrow__WEBPACK_IMPORTED_MODULE_5__",
    "_PrevArrow__WEBPACK_IMPORTED_MODULE_6__",
    "_hooks_useThemeWidth__WEBPACK_IMPORTED_MODULE_7__",
    "useStyles",
    "makeStyles",
    "theme",
    "root",
    "margin",
    "width",
    "MultipleItems",
    "props",
    "classes",
    "themeWidth",
    "useThemeWidth",
    "settings",
    "dots",
    "infinite",
    "speed",
    "rows",
    "slidesPerRow",
    "isWidthUp",
    "md",
    "sm",
    "slidesToScroll",
    "autoplay",
    "autoplaySpeed",
    "nextArrow",
    "a",
    "createElement",
    "prevArrow",
    "data",
    "Object",
    "assign",
    "className",
    "map",
    "i",
    "key",
    "id",
    "name",
    "refactorTextLength",
    "src",
    "photos",
    "url",
    "category",
    "tags",
    "regPrice",
    "variants",
    "price",
    "React",
    "memo",
    "useTheme",
    "search",
    "products",
    "keyword",
    "selectedProducts",
    "filter",
    "find",
    "m",
    "toLowerCase",
    "react_default",
    "MultiplyItems",
    "TopInterest",
    "hasProductsToShow",
    "index_es",
    "item",
    "variant"
  ],
  "mappings": "0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAAE,EAAAG,GAAAE,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAcMW,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQ,OACRC,MAAO,sBAqDCC,IA7CsC,SAAAC,GAClD,IAAMC,EAAUR,IACZS,EAAaC,cAGbC,EAAW,CACXC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,KAAM,EACNC,aAPaP,EAAWQ,UAAUC,GAAM,EAAKT,EAAWQ,UAAUE,GAAM,EAAI,EAQ5EC,eAAgB,EAChBC,UAAU,EACVC,cAAe,IACfC,UAAWjC,EAAAkC,EAAAC,cAAC5B,EAAA,EAAD,MACX6B,UAAWpC,EAAAkC,EAAAC,cAAC3B,EAAA,EAAD,OAER6B,EAAQpB,EAARoB,KASP,OAEIrC,EAAAkC,EAAAC,cAAC9B,EAAA6B,EAADI,OAAAC,OAAA,GAAYlB,EAAZ,CAAsBmB,UAAWtB,EAAQL,OACpCwB,EAAOA,EAAKI,IAAI,SAACxC,EAAGyC,GAAJ,OACb1C,EAAAkC,EAAAC,cAAA,OAAKQ,IAAKD,GAEN1C,EAAAkC,EAAAC,cAACjC,EAAA,EAAD,CACI0C,GAAI3C,EAAE2C,GACNC,KAAMC,YAAmB7C,EAAE4C,MAC3BE,MAAO9C,EAAE+C,QAAU,IAAI,IAAM,IAAIC,IACjCC,SAAUjD,EAAEkD,KACZC,UAAWnD,EAAEoD,UAAY,IAAI,GAAKpD,EAAEoD,SAAS,GAAGC,MAAQ,OAGhEtD,EAAAkC,EAAAC,cAAA,wGCpCDoB,IAAMC,KAbyB,SAAAvC,GACrBwC,cAArB,IAGOC,EAAoBzC,EAApByC,OAAQC,EAAY1C,EAAZ0C,SAEXC,EAAUF,GAAkB,GAC5BG,EAAoBH,GAAUC,EAAYA,EAASG,OAAO,SAAC7D,GAAD,OAAgBA,EAAEkD,KAAKY,KAAK,SAAAC,GAAC,OAAIA,EAAEC,gBAAkBL,MAAYD,EAE3H,OAAOO,EAAAhC,EAAAC,cAACgC,EAAA,EAAD,CAAY9B,KAAMwB,MCAlBO,UAnBK,SAAAnD,GAEsCA,EAA/CoD,kBAFkB,IAECV,EAA4B1C,EAA5B0C,SAA4B1C,EAAlBF,MAAkBE,EAAXC,QAE3C,OAAQyC,EACJO,EAAAhC,EAAAC,cAAA,eACI+B,EAAAhC,EAAAC,cAACmC,EAAA,EAAD,CAAMC,MAAI,GACNL,EAAAhC,EAAAC,cAACmC,EAAA,EAAD,CAAYE,QAAS,MAArB,qBAIJN,EAAAhC,EAAAC,cAAA,aAGS",
  "file": "static/js/3.2b474dca.chunk.js",
  "sourcesContent": [
    "import React from \"react\";\nimport ProductOverviewBox from '../Product/overviewBox'\nimport {refactorTextLength} from \"../../../api/ApiUtils\";\nimport Slider from \"react-slick\";\nimport {makeStyles, useTheme} from \"@material-ui/styles\";\nimport NextArrow from './NextArrow'\nimport PrevArrow from './PrevArrow'\nimport {Product} from \"../../../interfaces/server/Product\";\nimport {useThemeWidth} from \"../../../hooks/useThemeWidth\";\nimport {Theme} from \"@material-ui/core\";\nimport {Breakpoint} from \"@material-ui/core/styles/createBreakpoints\";\nimport {unstable_useMediaQuery as useMediaQuery} from \"@material-ui/core/useMediaQuery\";\nimport {breakpoints} from \"../../../constants/enum\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: '40px',\n        width: 'calc(100%-80px)'\n    },\n}));\n\ninterface Props {\n    data?: Array<Product>\n}\n\nconst MultipleItems: React.FunctionComponent<Props> = props => {\n    const classes = useStyles();\n    let themeWidth = useThemeWidth()\n    let size =      (themeWidth.isWidthUp.md) ? 4 : (themeWidth.isWidthUp.sm) ? 3 : 2\n\n    let settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        rows: 2,\n        slidesPerRow: size,\n        slidesToScroll: 1,\n        autoplay: true,\n        autoplaySpeed: 5000,\n        nextArrow: <NextArrow/>,\n        prevArrow: <PrevArrow/>,\n    };\n    const {data} = props;\n    // let size = props.size || 4;\n    // if (data.length > size) size = data.length;\n    // var products = [];\n    //\n    // for (var i = 0; i < size; i++) {\n    //     i % 4 == 0 && products.push([]);\n    //     products[Math.floor(i / 4)].push(data[i] || {});\n    // }\n    return (\n\n        <Slider {...settings} className={classes.root}>\n            {data ? data.map((n, i) =>\n                <div key={i}>\n\n                    <ProductOverviewBox\n                        id={n.id}\n                        name={refactorTextLength(n.name)}\n                        src={((n.photos || [])[0] || {}).url}\n                        category={n.tags}\n                        regPrice={(n.variants || [])[0] ? n.variants[0].price : 0}\n                    />\n                </div>\n            ) : <div/>}\n        </Slider>\n    );\n};\n\nexport default (MultipleItems)",
    "import React from 'react';\nimport MultiItems from '../../../Widget/Slick/MultiplyItems'\nimport {useTheme} from \"@material-ui/styles\";\nimport {Breakpoint} from \"@material-ui/core/styles/createBreakpoints\";\nimport {unstable_useMediaQuery as useMediaQuery} from \"@material-ui/core/useMediaQuery\";\nimport {Theme} from \"@material-ui/core\";\nimport {breakpoints} from \"../../../../constants/enum\";\nimport {Product} from \"../../../../interfaces/server/Product\";\n\ninterface Props {\n    search: string\n    products: Array<Product>\n    hasProductsToShow: boolean\n\n}\n\nconst Slick: React.FunctionComponent<Props> = props => {\n    const theme: Theme = useTheme()\n    const isWidthUp = (breakpoint: Breakpoint): boolean => useMediaQuery(theme.breakpoints.up(breakpoint));\n\n    const {search, products} = props;\n\n    let keyword = search ? search : '';\n    let selectedProducts = (search && products) ? products.filter((n: Product) => n.tags.find(m => m.toLowerCase() === keyword)) : products;\n\n        return <MultiItems data={selectedProducts} />;\n\n};\n\nexport default React.memo(Slick)",
    "import React from 'react';\nimport {Grid, Typography} from '@material-ui/core'\nimport Slick from './Widget/Slick'\n\nconst FEATURED_PRODUCTS = 'featured';\n\nconst TopInterest = props => {\n\n    const {hasProductsToShow, products, width, classes} = props;\n\n    return (products) ?\n        <section>\n            <Grid item>\n                <Typography variant={'h4'}>\n                    FEATURE PRODUCTS\n                </Typography>\n            </Grid>\n            <div>\n\n            </div>\n        </section> : null\n\n};\n\n\nexport default TopInterest\n"
  ],
  "sourceRoot": ""
}